CREATE TABLE Moderator (
    Login            VARCHAR(20)    NOT NULL,
    Pass            VARCHAR(20)    NOT NULL,
    Email_Address    VARCHAR(50)    NOT NULL,
    PRIMARY KEY (Login)
);
CREATE TABLE Manager (
    Login                        VARCHAR(20)    NOT NULL,
    Pass                        VARCHAR(20)    NOT NULL,
    Email_Address                VARCHAR(50)    NOT NULL,
    Alter_Player_Privileges        VARCHAR(20)    NOT NULL,
    Alter_Character_Privileges        VARCHAR(20)    NOT NULL,
    PRIMARY KEY (Login)
);
CREATE TABLE Created_By (
    Manager_Login        VARCHAR(20)    NOT NULL,
    Moderator_Login        VARCHAR(20)    NOT NULL,
    PRIMARY KEY (Manager_Login, Moderator_Login),
    FOREIGN KEY (Manager_Login) REFERENCES Manager(Login),
    FOREIGN KEY (Moderator_Login) REFERENCES Moderator(Login)
);
CREATE TABLE Deleted_By (
    Manager_Login        VARCHAR(20)    NOT NULL,
    Moderator_Login        VARCHAR(20)    NOT NULL,
    PRIMARY KEY (Manager_Login, Moderator_Login),
    FOREIGN KEY (Manager_Login) REFERENCES Manager(Login),
    FOREIGN KEY (Moderator_Login) REFERENCES Moderator(Login)
);
CREATE TABLE Player(
    Login                VARCHAR(20)    NOT NULL,
    Pass                VARCHAR(20)    NOT NULL,
    Email_Address        VARCHAR(50)    NOT NULL,
    State                VARCHAR(20),
    PRIMARY KEY (Login)
);
CREATE TABLE Location(
    ID                INT            NOT NULL,
    Type                VARCHAR(30)    NOT NULL,
    Size                INT            NOT NULL,
    Name                VARCHAR(30)    NOT NULL,
    Item                INT,
    Location_ID        INT            NOT NULL,
    PRIMARY KEY (ID)
);
ALTER TABLE Location
    ADD FOREIGN KEY (Location_ID) REFERENCES Location(ID);
CREATE TABLE Stat(
    ID                INT            NOT NULL,
    Stamina            INT            NOT NULL,
    Strength            INT            NOT NULL,
    Max_Hit_Points        INT            NOT NULL,
    Current_Hit_Points    INT            NOT NULL,
    Character_Name        VARCHAR(30),
    Creature_ID        INT,
    PRIMARY KEY (ID)
);
CREATE TABLE Player_Character(
    Name                VARCHAR(30)    NOT NULL,
    Inventory            INT            NOT NULL,
    Player_Login        VARCHAR(20)    NOT NULL,
    Location_ID        INT            NOT NULL,
    Stats_ID            INT            NOT NULL,
    State                VARCHAR(20)    NOT NULL,
    PRIMARY KEY (Name),
    FOREIGN KEY (Player_Login) REFERENCES Player(Login),
    FOREIGN KEY (Location_ID) REFERENCES Location(ID),
    FOREIGN KEY (Stats_ID) REFERENCES Stat(ID)
);
CREATE TABLE Ability(
    ID            INT            NOT NULL,
    Frequency        INT            NOT NULL,
    Stat            INT            NOT NULL,
    Channel        INT            NOT NULL,
    Duration        INT            NOT NULL,
    Behavior        VARCHAR(30)    NOT NULL,
    PRIMARY KEY (ID)
);
CREATE TABLE Creature(
    ID                INT        NOT NULL,
    Damage_Protection    INT        NOT NULL,
    Ability_ID            INT        NOT NULL,
    Location_ID        INT        NOT NULL,
    Stats_ID            INT        NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (Ability_ID) REFERENCES Ability(ID),
    FOREIGN KEY (Location_ID) REFERENCES Location(ID),
    FOREIGN KEY (Stats_ID) REFERENCES Stat(ID)
);
ALTER TABLE Stat
    ADD FOREIGN KEY(Character_Name)REFERENCES Player_Character(Name);
ALTER TABLE Stat
    ADD FOREIGN KEY (Creature_ID) REFERENCES Creature(ID);
CREATE TABLE Liked_Creatures (
    Creature_ID1        INT    NOT NULL,
    Creature_ID2        INT    NOT NULL,
    PRIMARY KEY (Creature_ID1, Creature_ID2),
    FOREIGN KEY (Creature_ID1) REFERENCES Creature(ID),
    FOREIGN KEY (Creature_ID2) REFERENCES Creature(ID)
);
CREATE TABLE Hated_Creatures (
    Creature_ID1        INT    NOT NULL,
    Creature_ID2        INT    NOT NULL,
    PRIMARY KEY (Creature_ID1, Creature_ID2),
    FOREIGN KEY (Creature_ID1) REFERENCES Creature(ID),
    FOREIGN KEY (Creature_ID2) REFERENCES Creature(ID)
);
CREATE TABLE Liked_Characters (
    Creature_ID        INT    NOT NULL,
    Character_Name        VARCHAR(30)    NOT NULL,
    PRIMARY KEY (Creature_ID, Character_Name),
    FOREIGN KEY (Creature_ID) REFERENCES Creature(ID),
    FOREIGN KEY (Character_Name) REFERENCES Player_Character(Name)
);
CREATE TABLE Hated_Characters (
    Creature_ID        INT    NOT NULL,
    Character_Name        VARCHAR(30)    NOT NULL,
    PRIMARY KEY (Creature_ID, Character_Name),
    FOREIGN KEY (Creature_ID) REFERENCES Creature(ID),
    FOREIGN KEY (Character_Name) REFERENCES Player_Character(Name)
);
CREATE TABLE Equipment(
    ID            INT            NOT NULL,
    Quest            VARCHAR(30),
    Description    INT,
    3D_Model        INT,
    PRIMARY KEY (ID)
);
CREATE TABLE Armor(
    Location_Attached    INT            NOT NULL,
    Damage_Protection    VARCHAR(30)    NOT NULL,
    Equip_ID            INT            NOT NULL,
    PRIMARY KEY (Equip_ID),
    FOREIGN KEY (Equip_ID) REFERENCES Equipment(ID)
);
CREATE TABLE Weapon(
    Location_Attached    INT,
    Target            INT,        
    Ability_ID            INT,
    Equip_ID            INT        NOT NULL,
    PRIMARY KEY (Equip_ID),
    FOREIGN KEY (Equip_ID) REFERENCES Equipment(ID),
    FOREIGN KEY (Ability_ID) REFERENCES Ability(ID)
);
CREATE TABLE Containers(
    Weight_Limit        INT        NOT NULL,
    Volume            INT        NOT NULL,
    Place_Attached        INT,
    Equip_ID            INT        NOT NULL,
    PRIMARY KEY (Equip_ID),
    FOREIGN KEY (Equip_ID) REFERENCES Equipment(ID)
);
CREATE TABLE Can_Contain(
    Equip_ID            INT        NOT NULL,
    Container_Equip_ID    INT        NOT NULL,
    PRIMARY KEY (Container_Equip_ID),
    FOREIGN KEY (Equip_ID) REFERENCES Containers(Equip_ID),
    FOREIGN KEY (Container_Equip_ID) REFERENCES Equipment(ID)
);